# OpenIM 统一入口配置
# 包含 Ingress 和 LoadBalancer 两种公网访问方式

---
# Ingress 方式 - 通过域名和路径访问
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openim-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: openim-nginx
  rules:
    - http:
        paths:
          - path: /openim-api
            pathType: Prefix
            backend:
              service:
                name: openim-api-service
                port:
                  number: 10002
          - path: /openim-msggateway
            pathType: Prefix
            backend:
              service:
                name: openim-msggateway-service
                port:
                  number: 10001
          - path: /chat-api
            pathType: Prefix
            backend:
              service:
                name: chat-api-service
                port:
                  number: 10008
          - path: /admin-api
            pathType: Prefix
            backend:
              service:
                name: admin-api-service
                port:
                  number: 10009

---
# LoadBalancer 方式 - 直接通过端口访问
apiVersion: v1
kind: Service
metadata:
  name: openim-api-public
  labels:
    app: openim-api
    service-type: public
spec:
  type: LoadBalancer
  selector:
    app: openim-api
  ports:
    - name: api
      protocol: TCP
      port: 10002
      targetPort: 10002
  loadBalancerSourceRanges: []  # 允许所有IP访问，生产环境建议限制

---
apiVersion: v1
kind: Service
metadata:
  name: chat-api-public
  labels:
    app: chat-api
    service-type: public
spec:
  type: LoadBalancer
  selector:
    app: chat-api-server
  ports:
    - name: api
      protocol: TCP
      port: 10008
      targetPort: 10008
  loadBalancerSourceRanges: []  # 允许所有IP访问，生产环境建议限制

---
apiVersion: v1
kind: Service
metadata:
  name: admin-api-public
  labels:
    app: admin-api
    service-type: public
spec:
  type: LoadBalancer
  selector:
    app: admin-api-server
  ports:
    - name: api
      protocol: TCP
      port: 10009
      targetPort: 10009
  loadBalancerSourceRanges: []  # 允许所有IP访问，生产环境建议限制

---
apiVersion: v1
kind: Service
metadata:
  name: messagegateway-public
  labels:
    app: messagegateway
    service-type: public
spec:
  type: LoadBalancer
  selector:
    app: messagegateway-rpc-server
  ports:
    - name: websocket
      protocol: TCP
      port: 10001
      targetPort: 10001
  loadBalancerSourceRanges: []  # 允许所有IP访问，生产环境建议限制
